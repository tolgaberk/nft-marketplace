name: Api

on:
  push:
    branches:
      - test-stage
      - master

jobs:
  install_and_cache:
    name: Install and Cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
      - run: yarn install
      - uses: actions/cache@v2
        id: restore-node_modules
        with:
          path: ./node_modules
          key: ${{ hashFiles('yarn.lock') }}

  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [install_and_cache]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
      - uses: actions/cache@v2
        id: restore-node_modules
        with:
          path: ./node_modules
          key: ${{ hashFiles('yarn.lock') }}
      - run: yarn nx run backend:test

  dockerize_and_push:
    runs-on: ubuntu-latest
    needs: [unit_tests]
    steps:
      - name: Prepare Environment
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
      - uses: actions/cache@v2
        id: restore-node_modules
        with:
          path: ./node_modules
          key: ${{ hashFiles('yarn.lock') }}

      - name: Build
        run: yarn nx run backend:build:production

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Generate .ENV
        run: |
          export DATABASE_URL="${{ secrets.TEST_DATABASE_URL }}"
          export JWT_SECRET="${{ secrets.JWT_SECRET }}"
          export NODE_ENV="production"
          envsubst < .env.template > .env

      - name: Dockerize
        run: yarn nx run backend:docker

      - name: Docker Push
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: 401970358918.dkr.ecr.eu-central-1.amazonaws.com/tradist
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
